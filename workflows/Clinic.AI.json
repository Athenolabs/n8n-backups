{
  "active": true,
  "connections": {
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "post_Schedule": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "post_Name": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "post_Procedure": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Notion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notion": {
      "main": [
        [
          {
            "node": "Date & Time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Notion1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Notion1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_Schedule": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory1": {
      "ai_memory": [
        [
          {
            "node": "Chat Memory Manager",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "main": [
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking \"Test workflow\"": {
      "main": [
        [
          {
            "node": "Chat Memory Manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-02-20T04:51:47.432Z",
  "id": "eskQYvZkZVdKTflm",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Clinic.AI",
  "nodes": [
    {
      "parameters": {
        "sessionKey": "={{ $('If1').item.json.whatsapp }}",
        "contextWindowLength": 30
      },
      "id": "1f43aed3-5676-4ccc-91e4-8a265d56b7a9",
      "name": "Window Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.1,
      "position": [
        1420,
        680
      ]
    },
    {
      "parameters": {
        "name": "post_ToSchedule",
        "description": "here we will schedule the patient's appointment with the date and time of the appointment.",
        "workflowId": "v7Xib2cl56a2in53",
        "fields": {
          "values": [
            {
              "name": "cus_cel",
              "stringValue": "={{ $('If1').item.json.whatsapp }}"
            }
          ]
        }
      },
      "id": "d2883792-3dfd-49e2-953d-ef711d944af6",
      "name": "post_Schedule",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1680,
        680
      ]
    },
    {
      "parameters": {
        "name": "post_Name",
        "description": "save user name to spreadsheet",
        "workflowId": "938MfMGZrn14VJNP",
        "fields": {
          "values": [
            {
              "name": "cus_cel",
              "stringValue": "={{ $('If1').item.json.whatsapp }}"
            }
          ]
        }
      },
      "id": "3b3b7bc4-11f6-47c4-ab39-86a06e20409b",
      "name": "post_Name",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1540,
        680
      ]
    },
    {
      "parameters": {
        "name": "get_Schedule",
        "description": "call a function to check which times are available this week",
        "workflowId": "g0VoeC7g7LSTtOn8",
        "fields": {
          "values": [
            {
              "name": "cel",
              "stringValue": "={{ $('If1').item.json.whatsapp }}"
            }
          ]
        }
      },
      "id": "ea122eec-6ca4-4048-99be-9f054ca07a4c",
      "name": "get_Schedule",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1960,
        680
      ]
    },
    {
      "parameters": {
        "name": "post_Procedure",
        "description": "save the procedure that the customer is interested in",
        "workflowId": "rxGBOvSC9J5dhmOX",
        "fields": {
          "values": [
            {
              "name": "cus_cel",
              "stringValue": "={{ $('If1').item.json.whatsapp }}"
            }
          ]
        }
      },
      "id": "bdbe4d12-54c5-420e-a27b-c690db1e0eee",
      "name": "post_Procedure",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1820,
        680
      ]
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "ca15ab7c-783f-404e-a5a3-c19991af4a89",
          "mode": "list",
          "cachedResultName": "Leads CRM",
          "cachedResultUrl": "https://www.notion.so/ca15ab7c783f404ea5a3c19991af4a89"
        },
        "filterType": "manual",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "key": "Whatsapp|rich_text",
              "condition": "equals",
              "richTextValue": "={{ $json.whats }}"
            }
          ]
        },
        "options": {}
      },
      "id": "56cd109e-e320-4a2a-beed-48f46486bccd",
      "name": "Notion",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.1,
      "position": [
        100,
        320
      ],
      "alwaysOutputData": true,
      "credentials": {
        "notionApi": {
          "id": "cPf1293CGIUwCXjl",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {},
      "id": "efcf85f3-c228-4789-8350-90cec217e229",
      "name": "When clicking \"Test workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        620,
        20
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1f1101e4-30ff-4751-86a9-abf3c759630a",
              "leftValue": "={{ $('Notion').item.json.property_whatsapp }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "dfee3b53-552c-4b4a-b0aa-2aeb360a231e",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1000,
        320
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "whats",
              "stringValue": "={{ $json.body.cus_cel }}"
            },
            {
              "name": "input1",
              "stringValue": "={{ $json.body.input }}"
            }
          ]
        },
        "options": {}
      },
      "id": "122de62a-1410-4618-8a39-8ed89161fb72",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        -60,
        320
      ]
    },
    {
      "parameters": {
        "resource": "databasePage",
        "databaseId": {
          "__rl": true,
          "value": "ca15ab7c-783f-404e-a5a3-c19991af4a89",
          "mode": "list",
          "cachedResultName": "Leads CRM",
          "cachedResultUrl": "https://www.notion.so/ca15ab7c783f404ea5a3c19991af4a89"
        },
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "Whatsapp|rich_text",
              "textContent": "={{ $json.whatsapp }}"
            }
          ]
        },
        "options": {}
      },
      "id": "811470f9-fc5c-46d2-ade8-bca5135acbc4",
      "name": "Notion1",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.1,
      "position": [
        1200,
        460
      ],
      "alwaysOutputData": true,
      "credentials": {
        "notionApi": {
          "id": "cPf1293CGIUwCXjl",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "whatsapp",
              "stringValue": "={{ $('Edit Fields1').item.json.whats }}"
            },
            {
              "name": "input",
              "stringValue": "={{ $('Edit Fields1').item.json.input1 }}"
            }
          ]
        },
        "options": {}
      },
      "id": "0b938e6d-019e-4bac-ad06-47c7da72b3af",
      "name": "Edit Fields2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        740,
        320
      ]
    },
    {
      "parameters": {
        "model": "gpt-3.5-turbo-1106",
        "options": {}
      },
      "id": "edf8ea8b-aedb-492a-b9c7-be59404358c9",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1320,
        680
      ],
      "credentials": {
        "openAiApi": {
          "id": "yRbbRezEyMzU8Qmb",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "clinic-ai",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "acb121d0-fe7d-4750-88c4-a92387055d15",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        -220,
        320
      ],
      "webhookId": "9a4b62d8-fa69-444a-bdf9-655414834ef6"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n    \"data\":\"{{ $json.output }}\"\n}",
        "options": {}
      },
      "id": "a5c8f079-031c-4802-99ec-81407592ee23",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1860,
        320
      ]
    },
    {
      "parameters": {
        "mode": "delete",
        "deleteMode": "all"
      },
      "id": "8f01b41a-c320-4d12-952a-77fba9855de5",
      "name": "Chat Memory Manager",
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1,
      "position": [
        820,
        20
      ]
    },
    {
      "parameters": {
        "sessionKey": "=556696",
        "contextWindowLength": "={{ 30 }}"
      },
      "id": "c8d770b3-1ab5-45ed-8e53-e0ce270fcd26",
      "name": "Window Buffer Memory1",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.1,
      "position": [
        900,
        160
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ new Date() }}",
        "format": "yyyy-MM-dd",
        "outputFieldName": "today",
        "options": {
          "timezone": true
        }
      },
      "id": "bcf1a84b-7c2b-47b9-aa19-668b46501493",
      "name": "Date & Time",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        280,
        320
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ new Date() }}",
        "format": "custom",
        "customFormat": "HH-mm",
        "outputFieldName": "todayHours",
        "options": {
          "timezone": true
        }
      },
      "id": "2ef4bdd4-af53-4e15-93c8-0bdee69e2c72",
      "name": "Date & Time1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        520,
        320
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Obtenha a data atual\nconst todayDate = $('Date & Time').item.json.today\nconst today = new Date(todayDate)\n\n// Obtenha o dia da semana (0 a 6)\nconst dayOfWeek = today.getDay();\n\n// Mapeie o número do dia da semana para o nome do dia\nconst weekdays = ['Domingo', 'Segunda-feira', 'Terça-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira', 'Sábado'];\nconst dayName = weekdays[dayOfWeek];\n\n// Adicione o nome do dia da semana ao item JSON\n$input.item.json.dayOfWeek = dayName;\n\n// Retorne o item atualizado\nreturn $input.item;\n"
      },
      "id": "424bbc03-9d79-4996-a13b-014a3e0de44d",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1360,
        320
      ]
    },
    {
      "parameters": {
        "text": "={{ $('If1').item.json.input }} | RESPONDA EM PORTUGUÊS BRASIL   ",
        "options": {
          "systemMessage": "=Descrição:\nVocê é uma atendente de uma clínica odontológica. Ajudando-os a marcar consultas gratuitas para avaliação e diagnóstico. Você precisa coletar informações essenciais, como data, hora e o tipo de procedimento desejado pelo paciente e Nome.\n\nInstruções:\n\n1- Cumprimente o paciente, ja pergunte o nome para sempre chamar o cliente pelo nome.\nex: Olá, primeiramente qual seu nome?\n2-Pergunte qual serviços o cliente tem interesse.\n3- Solicite a data e hora desejadas para a consulta. oferecendo opções disponíveis.\n4- Pergunte ao paciente sobre o motivo da consulta e forneça informações adicionais sobre os procedimentos disponíveis, se necessário.\n5- Após confirmar a data, hora e procedimento desejado, finalize o agendamento com uma nota amigável com o resumo da data e hora, procedimento, fornecendo informações adicionais, como a localização da clínica e o que esperar na consulta inicial.\n\nSe o paciente pergunta sobre quais são os procedimento ou serviço e qual o valor(preço) de cada um aqui está(mostre isso a eles):\n[\nLimpeza Dental - R$100\nExtração de Dente - R$200\nTratamento de Canal - R$300\nRestauração de Cáries - R$150\nClareamento Dental - R$250\nImplante Dentário - R$500\nOrtodontia (aparelho dentário) - R$400\n]\nSiga esse passo a passo com o cliente.\n\nREGRA: sempre que enviar mensagem chama o cliente pelo nome\n\nLembre-se de manter uma comunicação empática e esclarecedora para garantir que os pacientes se sintam confortáveis e confiantes ao marcar suas consultas.\n\nquando o cliente que quer pra algum dia, ex:\n\nquero pra amanhã, quero pra sexta, use o post_Schedule do tools.\n\nlembrando, seu nome é Jessica, se passe por uma pessoa de verdade. só responda questões sobre a clinica e nada mais.\n\ncaso tenha problemas ou não saiba responder algo ofereça esse numero para o paciente ligar e tirar duvidas pessoalmente: (66) 99618-8393\n\nContexto:\n\nhoje é: {{ $('Date & Time').item.json[\"today\"] }}\nO Horario é: {{ $('Date & Time1').item.json[\"todayHours\"] }}\nDia da semana: {{ $json[\"dayOfWeek\"] }}\n\nSEMPRE que o cliente falar que quer alguma data expecifica ou dia expessifico envia a data que ele falou no query do tools que for usar porfavor."
        }
      },
      "id": "f6ceed97-d85c-4d38-aea9-e8a405d725a8",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.2,
      "position": [
        1540,
        320
      ]
    }
  ],
  "pinData": {
    "When clicking \"Test workflow\"": [
      {
        "json": {}
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Boa_Vista",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-02-21T18:21:30.526Z",
      "updatedAt": "2024-02-21T18:21:30.526Z",
      "id": "4wLFcM3QYEjAsdBn",
      "name": "ai_Agenda"
    },
    {
      "createdAt": "2023-10-10T01:40:35.294Z",
      "updatedAt": "2023-10-10T01:40:35.294Z",
      "id": "YeXFRAnvLXlIp4mp",
      "name": "OdontoVida"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-02-22T20:01:57.673Z",
  "versionId": "34663fcb-c6be-46ce-8185-7480e59f184d"
}