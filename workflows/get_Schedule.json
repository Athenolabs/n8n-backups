{
  "active": false,
  "connections": {
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Notion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notion": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Date & Time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "main": [
        [
          {
            "node": "Date & Time2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Notion1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notion1": {
      "main": [
        [
          {
            "node": "Notion2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notion2": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time2": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-02-13T21:26:37.130Z",
  "id": "g0VoeC7g7LSTtOn8",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "get_Schedule",
  "nodes": [
    {
      "parameters": {},
      "id": "d3f7cb71-cce4-4218-b7c7-59be3b8c4592",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        560,
        300
      ]
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "f90abc5d-ca8b-4274-b54b-67e7c1d82729",
          "mode": "list",
          "cachedResultName": "AGENDA",
          "cachedResultUrl": "https://www.notion.so/f90abc5dca8b4274b54b67e7c1d82729"
        },
        "filterType": "manual",
        "filters": {
          "conditions": [
            {
              "key": "Date de Avaliação|date",
              "condition": "next_week"
            }
          ]
        },
        "options": {}
      },
      "id": "02f84ba5-cdec-4166-bbd9-41ee89d00147",
      "name": "Notion",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.1,
      "position": [
        740,
        300
      ],
      "alwaysOutputData": true,
      "credentials": {
        "notionApi": {
          "id": "cPf1293CGIUwCXjl",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "property_date_de_avalia_o.start",
              "renameField": true,
              "outputFieldName": "dateAvaliation"
            }
          ]
        },
        "options": {}
      },
      "id": "c7ef89d1-5201-4216-b19d-9344d6c2d7d0",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        960,
        300
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ new Date() }}",
        "format": "yyyy-MM-dd",
        "outputFieldName": "today",
        "options": {
          "timezone": true
        }
      },
      "id": "766199c6-e67d-42b4-b006-9334f260bb00",
      "name": "Date & Time",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1120,
        300
      ]
    },
    {
      "parameters": {
        "prompt": "=Hoje é: {{ $('Date & Time').item.json[\"today\"] }}\nHorario é: {{ $('Date & Time2').item.json[\"today\"] }}\nDia da semana: {{ $json[\"dayOfWeek\"] }}\n\nEsse são os horario ocuparados:\n {{ $('Aggregate').item.json.dateAvaliation }}\n\ninput do usuario, pode ter?:\n{{ $('Execute Workflow Trigger').item.json[\"query\"] }}\n\nCom essas informações me retorne uma data e hora que esteja entre segunda e sexta feira, e entre das 7 horas as 17 horas e que não seja igual a uma das data e horarios ocupado. E que pegando a data de hoje esteja dentro de uma semana apos a data de hoje.\nse ja tive data ex 2024-02-21, verifique o horario. se ja tiver uma data e hora igual, ai você recomenda um no mesmo dia num horario diferente que esteja disponivel. caso todos horarios das 7 horas a 17horas esteja ocupados, recomende do dia seguinte e por ai vai.\n\nlembrase que sabado e domingo não podemos marcar porque não atendemos.\n\nNesse Formato: YYYY-MM-DD HH-MM",
        "options": {
          "temperature": 0
        }
      },
      "id": "8d89f786-2b5d-4f3e-b626-1022960e8c34",
      "name": "OpenAI",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1.1,
      "position": [
        1580,
        300
      ],
      "credentials": {
        "openAiApi": {
          "id": "yRbbRezEyMzU8Qmb",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Obtenha a data atual\nconst todayDate = $('Date & Time').item.json.today\nconst today = new Date(todayDate)\n\n// Obtenha o dia da semana (0 a 6)\nconst dayOfWeek = today.getDay();\n\n// Mapeie o número do dia da semana para o nome do dia\nconst weekdays = ['Domingo', 'Segunda-feira', 'Terça-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira', 'Sábado'];\nconst dayName = weekdays[dayOfWeek];\n\n// Adicione o nome do dia da semana ao item JSON\n$input.item.json.dayOfWeek = dayName;\n\n// Retorne o item atualizado\nreturn $input.item;\n"
      },
      "id": "92acb3de-7b78-4822-a7e6-3f39f191e1a2",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1420,
        300
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "response",
              "stringValue": "=Horario disponivel:  {{ $('OpenAI').item.json.text }}.\n\npara o bot: não agende ainda, fico no aguardo para confirmação. "
            }
          ]
        },
        "options": {}
      },
      "id": "85088d0b-8131-4f1c-a063-c01fb656136e",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        2160,
        300
      ]
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "ca15ab7c-783f-404e-a5a3-c19991af4a89",
          "mode": "list",
          "cachedResultName": "Leads CRM",
          "cachedResultUrl": "https://www.notion.so/ca15ab7c783f404ea5a3c19991af4a89"
        },
        "filterType": "manual",
        "filters": {
          "conditions": [
            {
              "key": "Whatsapp|rich_text",
              "condition": "equals",
              "richTextValue": "={{ $('Execute Workflow Trigger').item.json.cel }}"
            }
          ]
        },
        "options": {}
      },
      "id": "33e63818-4b14-44e8-b1d8-fdcbd4c79724",
      "name": "Notion1",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.1,
      "position": [
        1760,
        300
      ],
      "alwaysOutputData": true,
      "credentials": {
        "notionApi": {
          "id": "cPf1293CGIUwCXjl",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "update",
        "pageId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "data recomendada|rich_text",
              "textContent": "={{ $('OpenAI').item.json.text }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c1b7e705-44dc-4661-a79d-58f10889863e",
      "name": "Notion2",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.1,
      "position": [
        1960,
        300
      ],
      "alwaysOutputData": true,
      "credentials": {
        "notionApi": {
          "id": "cPf1293CGIUwCXjl",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ new Date() }}",
        "format": "custom",
        "customFormat": "HH-mm",
        "outputFieldName": "today",
        "options": {
          "timezone": true
        }
      },
      "id": "7f0e0a53-3054-4e4e-add9-d030b6714b57",
      "name": "Date & Time2",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1260,
        300
      ]
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "cel": "5566996188393"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Cuiaba",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-02-21T18:21:30.526Z",
      "updatedAt": "2024-02-21T18:21:30.526Z",
      "id": "4wLFcM3QYEjAsdBn",
      "name": "ai_Agenda"
    },
    {
      "createdAt": "2023-10-10T01:40:35.294Z",
      "updatedAt": "2023-10-10T01:40:35.294Z",
      "id": "YeXFRAnvLXlIp4mp",
      "name": "OdontoVida"
    }
  ],
  "triggerCount": 2,
  "updatedAt": "2024-02-22T02:57:30.449Z",
  "versionId": "15fa0226-4815-4d22-9305-57b07e9f0443"
}