{
  "active": false,
  "connections": {
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking \"Test workflow\"": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "loopItems": {
      "main": [
        [],
        []
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets1": {
      "main": [
        [
          {
            "node": "Google Sheets2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets2": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-02-13T21:26:37.130Z",
  "id": "g0VoeC7g7LSTtOn8",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "get_Schedule",
  "nodes": [
    {
      "parameters": {},
      "id": "d3f7cb71-cce4-4218-b7c7-59be3b8c4592",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        560,
        300
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1BF9H7QttI5Hd5j2XtzXUwxVX_wOW8RMK85dPSIxQ3G8",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Página1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1BF9H7QttI5Hd5j2XtzXUwxVX_wOW8RMK85dPSIxQ3G8/edit#gid=0"
        },
        "options": {}
      },
      "id": "d56fa39b-21aa-455d-a326-02aac8107ab3",
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.2,
      "position": [
        780,
        300
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "8PMyFLU1UY4P3iLS",
          "name": "Lucas Katacha"
        }
      }
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "response",
              "stringValue": "=sem datas para essa semana"
            }
          ]
        },
        "options": {}
      },
      "id": "6980f52a-3812-4bfd-947f-0a2afff91037",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        2020,
        640
      ]
    },
    {
      "parameters": {},
      "id": "76be58a3-3692-4ea1-a402-38040354d66c",
      "name": "When clicking \"Test workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        380,
        520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "23ffb6de-a275-4e6b-8cfd-65fd8827aec3",
              "leftValue": "={{ $json['Data de Avaliação'] }}",
              "rightValue": "=2024-02",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "896f8bc4-62eb-453c-88a0-25162de2daec",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2020,
        340
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "42de5ed9-9e7b-4d7f-b459-7e511bf0785a",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1320,
        80
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "response",
              "stringValue": "={{ $json.message.content }}"
            }
          ]
        },
        "options": {}
      },
      "id": "223c8663-65d6-4ad6-80d7-326bab7e695b",
      "name": "response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        1760,
        240
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Adicionando um novo campo chamado 'datesInRange' ao JSON do item\n$input.item.json.datesInRange = [];\n\nfunction getDatesForCurrentWeek() {\n    let currentDate = new Date();\n    let currentDay = currentDate.getDay(); // 0 (Domingo) a 6 (Sábado)\n    let firstDayOfWeek = new Date(currentDate);\n    firstDayOfWeek.setDate(currentDate.getDate() - currentDay + 1); // Definindo para segunda-feira desta semana\n\n    let lastDayOfWeek = new Date(firstDayOfWeek);\n    lastDayOfWeek.setDate(firstDayOfWeek.getDate() + 4); // Definindo para sexta-feira desta semana\n\n    let datesInRange = [];\n    let currentDateInWeek = new Date(firstDayOfWeek);\n\n    // Adicionando todas as datas da semana ao array\n    while (currentDateInWeek <= lastDayOfWeek) {\n        datesInRange.push(new Date(currentDateInWeek));\n        currentDateInWeek.setDate(currentDateInWeek.getDate() + 1);\n    }\n\n    return datesInRange;\n}\n\n// Obtendo as datas da semana atual\nlet datesForCurrentWeek = getDatesForCurrentWeek();\n\n// Adicionando as datas no campo 'datesInRange'\ndatesForCurrentWeek.forEach(date => {\n    $input.item.json.datesInRange.push(date.toDateString());\n});\n\n// Retornando o item com o novo campo adicionado\nreturn $input.item;\n"
      },
      "id": "aa0e490b-fc8d-4500-8d5a-2bad1f87e268",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        760,
        120
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "dates",
              "stringValue": "={{ $json['Data de Avaliação'] }}"
            },
            {
              "name": "hours",
              "stringValue": "={{ $json['Hora da Avaliação'] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7ca9e926-b346-4ff9-95a9-3120b9a7107a",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        660,
        520
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "1b64cee3-5df4-4bb6-8a49-352fe7524dc9",
      "name": "loopItems",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1960,
        800
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "return $('Google Sheets').item.json"
      },
      "id": "3bed8f77-e990-49de-b82e-36d005b77981",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        740,
        680
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "60b643f4-38ae-40dd-8ff3-d10ff186a70c",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1020,
        300
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1BF9H7QttI5Hd5j2XtzXUwxVX_wOW8RMK85dPSIxQ3G8",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": 1112858656,
          "mode": "list",
          "cachedResultName": "Memory",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1BF9H7QttI5Hd5j2XtzXUwxVX_wOW8RMK85dPSIxQ3G8/edit#gid=1112858656"
        },
        "options": {}
      },
      "id": "0ec5ae19-18e6-4598-9f29-feb8f2dadee8",
      "name": "Google Sheets1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.2,
      "position": [
        1400,
        380
      ],
      "retryOnFail": false,
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "8PMyFLU1UY4P3iLS",
          "name": "Lucas Katacha"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1BF9H7QttI5Hd5j2XtzXUwxVX_wOW8RMK85dPSIxQ3G8",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": 1112858656,
          "mode": "list",
          "cachedResultName": "Memory",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1BF9H7QttI5Hd5j2XtzXUwxVX_wOW8RMK85dPSIxQ3G8/edit#gid=1112858656"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Memory_Date": "={{ $('Edit Fields2').item.json.date }} as {{ $('Edit Fields2').item.json.hour }}, {{ $json.Memory_Date }} as  {{ $json.Memory_Hour }}",
            "Memory_Hour": "=2"
          },
          "matchingColumns": [
            "Memory_Hour"
          ],
          "schema": [
            {
              "id": "Memory_Date",
              "displayName": "Memory_Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Memory_Hour",
              "displayName": "Memory_Hour",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "809b1c6c-ef57-428c-b691-8a69faf1012c",
      "name": "Google Sheets2",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.2,
      "position": [
        1560,
        400
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "8PMyFLU1UY4P3iLS",
          "name": "Lucas Katacha"
        }
      }
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "date",
              "stringValue": "={{ $json['Data de Avaliação'] }}"
            },
            {
              "name": "hour",
              "stringValue": "={{ $json['Hora da Avaliação'] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e99ffc53-e8d6-4cf3-8f09-2b9d0dcd658e",
      "name": "Edit Fields2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        1220,
        380
      ]
    },
    {
      "parameters": {
        "amount": 3,
        "unit": "seconds"
      },
      "id": "cfffeb38-fb05-4128-b1dc-18bc7056a9a9",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        1560,
        720
      ],
      "webhookId": "d2cf5657-7ea4-4fe9-923b-3a644754cb14"
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "res",
              "stringValue": "={{ $json.Memory_Date }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6c95acc9-5d7f-4058-a8d2-3e97f3ae4da2",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        1780,
        400
      ]
    },
    {
      "parameters": {
        "resource": "chat",
        "prompt": {
          "messages": [
            {
              "content": "=DATA OCUPADAS:{{ $json.res }}\n\nFAÇA: Pode recomendar dois dias diferente do dia 12 a 16 de fevereiro e horario entre 7 as 17. antes verifique se não está na datas ocupadas se é igual\n\nRetorne ex: temos vamos no dia 13-02-2024 as 09 horas e as no dia 15-02-2024 as 14 horas.\n\nresponda apenas os dois dias e horarios recomendados. não precisa explicar nada"
            }
          ]
        },
        "options": {
          "maxTokens": 100,
          "temperature": 0
        }
      },
      "id": "0f1746eb-6c31-47a2-9ad6-684d792b3a60",
      "name": "OpenAI",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1.1,
      "position": [
        1460,
        240
      ],
      "credentials": {
        "openAiApi": {
          "id": "yRbbRezEyMzU8Qmb",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "ebb619af-a1a4-4ce2-95f6-d857c1f85310",
      "name": "Loop Over Items1",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1220,
        240
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 2,
  "updatedAt": "2024-02-16T15:34:35.370Z",
  "versionId": "257f7760-642a-49a4-97c0-bb03a9acd063"
}