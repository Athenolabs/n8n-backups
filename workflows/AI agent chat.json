{
  "active": true,
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "post_Schedule": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "post_Name": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_Schedule": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "post_Procedure": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-02-13T21:30:55.073Z",
  "id": "8gq96Au67FPECopK",
  "meta": {
    "templateId": "1954",
    "templateCredsSetupCompleted": true
  },
  "name": "AI agent chat",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "c6839caa-5815-4526-8588-3a82c7dad7bf",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1040,
        780
      ],
      "credentials": {
        "openAiApi": {
          "id": "yRbbRezEyMzU8Qmb",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionKey": "={{ $('If').item.json.ID || $('Google Sheets1').item.json.ID }}",
        "contextWindowLength": 30
      },
      "id": "b0f28d52-0008-4e4c-8707-77275fe33f0d",
      "name": "Window Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.1,
      "position": [
        1300,
        540
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "chatClinica",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "ed1671ce-d2c9-4880-a0c0-6a0c0b234334",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        80,
        240
      ],
      "webhookId": "1325fe6d-7653-4fc1-acba-f1d6cc40626f"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1BF9H7QttI5Hd5j2XtzXUwxVX_wOW8RMK85dPSIxQ3G8",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Página1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1BF9H7QttI5Hd5j2XtzXUwxVX_wOW8RMK85dPSIxQ3G8/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Whatsapp",
              "lookupValue": "={{ $json.body.cus_cel }}"
            }
          ]
        },
        "options": {}
      },
      "id": "1ca3a460-e1c1-4cdd-89c2-b11ba50b7914",
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.2,
      "position": [
        300,
        240
      ],
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "8PMyFLU1UY4P3iLS",
          "name": "Lucas Katacha"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1f1101e4-30ff-4751-86a9-abf3c759630a",
              "leftValue": "={{ $json.Whatsapp }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7145ee16-ebf4-4d38-a7cc-a522b562967f",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        580,
        240
      ]
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1BF9H7QttI5Hd5j2XtzXUwxVX_wOW8RMK85dPSIxQ3G8",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Página1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1BF9H7QttI5Hd5j2XtzXUwxVX_wOW8RMK85dPSIxQ3G8/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Data de 1º Contato": "={{new Date().format(\"yyyy-MM-dd\")}}",
            "Whatsapp": "={{ $json.whats }}",
            "ID": "=id_{{Array.from({length: 20}, () => Math.random().toString(36)[2]).join('')}}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Data de 1º Contato",
              "displayName": "Data de 1º Contato",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Nome",
              "displayName": "Nome",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Whatsapp",
              "displayName": "Whatsapp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Data de Avaliação",
              "displayName": "Data de Avaliação",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Hora da Avaliação",
              "displayName": "Hora da Avaliação",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Procedimento",
              "displayName": "Procedimento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "ca29b10b-3be1-48fb-8d52-16c749da8d94",
      "name": "Google Sheets1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.2,
      "position": [
        920,
        480
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "8PMyFLU1UY4P3iLS",
          "name": "Lucas Katacha"
        }
      }
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "whats",
              "stringValue": "={{ $('Webhook').item.json.body.cus_cel }}"
            },
            {
              "name": "idUser",
              "stringValue": "={{ $json.ID }}"
            },
            {
              "name": "input1",
              "stringValue": "={{ $('Webhook').item.json.body.input }}"
            }
          ]
        },
        "options": {}
      },
      "id": "cd3eab6f-e9f3-46de-bd44-5be9066ceb31",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        440,
        240
      ]
    },
    {
      "parameters": {
        "name": "post_Schedule",
        "description": "schedule the date and time of the appointment in the spreadsheet",
        "workflowId": "v7Xib2cl56a2in53",
        "fields": {
          "values": [
            {
              "name": "=date",
              "stringValue": "={{ $('Webhook').item.json.input.match(/(\\d{2}-\\d{2}-\\d{4})/)[0]\n}}"
            },
            {
              "name": "hour",
              "stringValue": "={{      $('Webhook').item.json.input.match(/(\\d{1,2}:\\d{2})/)[0] }}"
            },
            {
              "name": "cus_cel",
              "stringValue": "={{ $('Edit Fields').item.json.whats }}"
            }
          ]
        }
      },
      "id": "2eafeeb8-8c82-4518-bb6b-0c4f14817353",
      "name": "post_Schedule",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1380,
        640
      ]
    },
    {
      "parameters": {
        "name": "post_Name",
        "description": "save user name to spreadsheet",
        "workflowId": "938MfMGZrn14VJNP",
        "fields": {
          "values": [
            {
              "name": "cus_cel",
              "stringValue": "={{ $('Edit Fields').item.json.whats }}"
            }
          ]
        }
      },
      "id": "feef7597-1180-4363-b7c4-f4b027d82ced",
      "name": "post_Name",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1500,
        640
      ]
    },
    {
      "parameters": {
        "public": true,
        "initialMessages": "Olá! 👋\nMeu nome é Nathan. Como posso ajudá-lo hoje?",
        "options": {}
      },
      "id": "42be753d-c218-46b5-864b-e45ea6d10335",
      "name": "Chat Trigger",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1,
      "position": [
        80,
        60
      ],
      "webhookId": "c4570114-f1aa-46aa-b51b-83af678554a2"
    },
    {
      "parameters": {
        "name": "get_Schedule",
        "description": "call a function to check which times are available this week",
        "workflowId": "g0VoeC7g7LSTtOn8"
      },
      "id": "be4c969c-59b9-49e6-bbd7-8fc292f98bcf",
      "name": "get_Schedule",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1620,
        640
      ]
    },
    {
      "parameters": {
        "name": "post_Procedure",
        "description": "save the procedure that the customer is interested in",
        "workflowId": "rxGBOvSC9J5dhmOX",
        "fields": {
          "values": [
            {
              "name": "cus_cel",
              "stringValue": "={{ $('Edit Fields').item.json.whats }}"
            }
          ]
        }
      },
      "id": "a4802f68-54c0-4d60-8341-2baa0d38d984",
      "name": "post_Procedure",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1740,
        640
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"response\": \"{{ $json.output }}\"\n} ",
        "options": {}
      },
      "id": "df4c0223-e38c-4e5f-9b9c-f7f716d6d945",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1720,
        240
      ]
    },
    {
      "parameters": {
        "text": "={{ $('Edit Fields').item.json.input1 }} | RESPONDA EM PORTUGUÊS BRASIL  ",
        "options": {
          "systemMessage": "=Descrição:\nVocê é a atendente de uma clínica odontológica. Sua tarefa é interagir com os pacientes em potencial de uma forma acolhedora e profissional, ajudando-os a marcar consultas gratuitas para avaliação e diagnóstico. Você precisa coletar informações essenciais, como data, hora e o tipo de procedimento desejado pelo paciente e Nome.\n\nAqui está uma lista de procedimentos comuns oferecidos pela clínica, juntamente com seus respectivos preços:\n\nLimpeza Dental - R$100\nExtração de Dente - R$200\nTratamento de Canal - R$300\nRestauração de Cáries - R$150\nClareamento Dental - R$250\nImplante Dentário - R$500\nOrtodontia (aparelho dentário) - R$400\n\nSiga esse passo a passo com o cliente.\nInstruções:\n\n1- Cumprimente o paciente, ja pergunte o nome para sempre chamar o cliente pelo nome.\nex: Olá, primeiramente qual seu nome, e como podemos te ajudar?\n2-Pergunte qual procedimento o cliente tem interesse.\n3- Solicite a data e hora desejadas para a consulta. oferecendo opções disponíveis.\n4- Pergunte ao paciente sobre o motivo da consulta e forneça informações adicionais sobre os procedimentos disponíveis, se necessário.\n5- Após confirmar a data, hora e procedimento desejado, finalize o agendamento com uma nota amigável com o resumo da data e hora, procedimento, fornecendo informações adicionais, como a localização da clínica e o que esperar na consulta inicial.\n\nsempre que enviar mensagem chama o cliente pelo nome\n\nLembre-se de manter uma comunicação empática e esclarecedora para garantir que os pacientes se sintam confortáveis e confiantes ao marcar suas consultas."
        }
      },
      "id": "de26d593-00e4-4078-8c53-5464743ea045",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.2,
      "position": [
        1340,
        240
      ]
    }
  ],
  "pinData": {},
  "settings": {},
  "staticData": null,
  "tags": [],
  "triggerCount": 3,
  "updatedAt": "2024-02-17T14:29:36.768Z",
  "versionId": "8afc8a1a-dd5e-42e2-b1f3-b00ed46385ec"
}